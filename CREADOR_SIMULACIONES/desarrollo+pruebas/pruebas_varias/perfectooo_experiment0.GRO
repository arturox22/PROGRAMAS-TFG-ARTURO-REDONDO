
//#################################################
//############# INITIAL PARAMETERS ################
//#################################################

include gro_elegro1-2-3
set_theme(dark_theme);
set ("dt", 0.1);
set ("population_max", 90000);
set ("signals", 1.0); //0.0: off, 1.0: on
set ("signals_draw", 1.0); //0.0: off, 1.0: on
set ("seed", 22);

grid(2001, 5, 0);



//-------------------------------------------------------

//#################################################
//############## GLOBAL VARIABLES #################
//#################################################

// *** Signals ***
diff := 0.6;
deg := 0.3;
k_pad := 10.0;


// *** Metabolism Variables ***
threshold_up := 0.04;
signal_emission := 1.2;


// *** Color parameters ***
color_intensity := 500;
delta_on := 0;
reverse_on := 0;


// *** Strain Parameters ***
met_growth_on := 0;
base_growth := 0.0;


// *** Replating Parameters ***
survivors := 0.9;
survivors_variability := 0.0;
replate_timing := [ output_time_start := 180.0, output_time_stop := 10000.0, period := -1 ];
// replate en min 180 ~ 9 generaciones ~ 25600 c√©lulas 

// *** Output parameters ***
output_path := "C:\output_GRO\";
pop_level := 1.2;
output_timing := [ output_time_start := 0.0, output_time_stop := 1000000.0, period := 10 ];


// *** Ecolis function ***
x_position := 0.0;
y_position := 0.0;
num_cells := 10;
radious := 300.0;


// *** Interaction Forces ***
f_pos := 0.05;
f_neg := -0.05;


//-------------------------------------------------------
               
//#################################################
//##################   SIGNAL   ###################
//#################################################


signal([ name := "A", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "B", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "C", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "D", kdiff := diff, kdeg := deg, pad := k_pad ]);



//-------------------------------------------------------
               
//#################################################
//##################   GATES   ####################
//#################################################


gate([ name := "gaTrue", function := "TRUE", input := {} ]);
gate([ name := "gaStrain1", function := "YES", input := {"Strain1"}  ]);
gate([ name := "gaStrain2", function := "YES", input := {"Strain2"}  ]);
gate([ name := "gaStrain3", function := "YES", input := {"Strain3"}  ]);
gate([ name := "gaStrain4", function := "YES", input := {"Strain4"}  ]);
gate([ name := "gaStrain5", function := "YES", input := {"Strain5"}  ]);

    
    
//-------------------------------------------------------           
    

//#################################################
//###############   METABOLISM   ##################
//#################################################



metabolism ([name := "metStrain1",
			gate := "gaStrain1",
			metabolites := {"A"},
			fluxes := {"Aout"},

			Aout := [metabolite := "A", f := [ bias := signal_emission ] ]
]);


metabolism ([name := "metStrain2",
			gate := "gaStrain2",
			metabolites := {"A", "B", "D"},
			fluxes := {"Ain", "Bin", "Din", "biomass"},

			Ain := [metabolite := "A",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"A"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ A := threshold_up, up := "max", low := "ins"]  ],

			Bin := [metabolite := "B",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"B"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ B := threshold_up, up := "max", low := "ins"]  ],

			Din := [metabolite := "D",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"D"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ D := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Ain", "Bin", "Din"}, fluxes_w := {-f_neg, -f_neg, -f_neg}, bias := 0.0 ] ]
]);


metabolism ([name := "metStrain3",
			gate := "gaStrain3",
			metabolites := {"B", "C"},
			fluxes := {"Bout", "Cout"},

			Bout := [metabolite := "B", f := [ bias := signal_emission ] ],

			Cout := [metabolite := "C", f := [ bias := signal_emission ] ]
]);


metabolism ([name := "metStrain4",
			gate := "gaStrain4",
			metabolites := {"C"},
			fluxes := {"Cin", "biomass"},

			Cin := [metabolite := "C",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"C"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ C := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Cin"}, fluxes_w := {-f_pos}, bias := 0.0 ] ]
]);


metabolism ([name := "metStrain5",
			gate := "gaStrain5",
			metabolites := {"D"},
			fluxes := {"Dout"},

			Dout := [metabolite := "D", f := [ bias := signal_emission ] ]
]);




//-------------------------------------------------------
               
//#################################################
//##################   COLOR   ####################
//#################################################


color([ gate := "gaStrain1", channels := {0,0,0,color_intensity}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain2", channels := {0,0,color_intensity,0}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain3", channels := {0,0,color_intensity,color_intensity}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain4", channels := {0,color_intensity,0,0}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain5", channels := {0,color_intensity,0,color_intensity}, delta := delta_on, reverse := reverse_on ]);



//-------------------------------------------------------
               
//#################################################
//#################   STRAIN   ####################
//#################################################


strain([ name := "Strain1", cell_growth := [ base_growth_rate_rdn := [ dist_params := {base_growth, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain2", cell_growth := [ base_growth_rate_rdn := [ dist_params := {base_growth, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain3", cell_growth := [ base_growth_rate_rdn := [ dist_params := {base_growth, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain4", cell_growth := [ base_growth_rate_rdn := [ dist_params := {base_growth, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain5", cell_growth := [ base_growth_rate_rdn := [ dist_params := {base_growth, 0.0} ], metabolism_growth := met_growth_on ] ]);



//-------------------------------------------------------
               
//#################################################
//#############  REPLATING FUNCTION  ##############
//#################################################


replating([ alive_fraction := survivors, alive_fraction_var := survivors_variability, timing := replate_timing ]);



//-------------------------------------------------------
               
//#################################################
//##################   OUTPUT   ###################
//#################################################


output([ path := output_path, file_name := "perfectooo_experiment0",
						gate := "gaTrue",
						population_level := 1,
						timing := output_timing,
						decimal_places := 2,
						fields := {"molecule"}, molecule := {"Strain1", "Strain2", "Strain3", "Strain4", "Strain5"}]);

//-------------------------------------------------------

// ====================== 
//|   LOAD INSTRUCTION   |
// ======================

load_gen([ auto_gates := 0 ]);


//-------------------------------------------------------

//#################################################
//############ PROGRAM INSTRUCTIONS ###############
//#################################################

program p() := 
{
	selected: {die(); }
    skip();
};

program main() :=
{
	skip();
};



//-------------------------------------------------------
               
//#################################################
//##################   ECOLIS   ###################
//#################################################


ecolis( [ num := 1, x := x_position, y := y_position, r := radious , strain := "Strain1", plasmids := {}, molecules := {}, mode := "default" ], program p());
ecolis( [ num := 1, x := x_position, y := y_position, r := radious , strain := "Strain2", plasmids := {}, molecules := {}, mode := "default" ], program p());
ecolis( [ num := 1, x := x_position, y := y_position, r := radious , strain := "Strain3", plasmids := {}, molecules := {}, mode := "default" ], program p());
ecolis( [ num := 1, x := x_position, y := y_position, r := radious , strain := "Strain4", plasmids := {}, molecules := {}, mode := "default" ], program p());
ecolis( [ num := 1, x := x_position, y := y_position, r := radious , strain := "Strain5", plasmids := {}, molecules := {}, mode := "default" ], program p());
