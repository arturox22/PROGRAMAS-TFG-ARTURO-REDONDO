
//#################################################
//############# INITIAL PARAMETERS ################
//#################################################

include gro_elegro1-2-3
set_theme(dark_theme);
set ("dt", 0.1);
set ("population_max", 2000000);
set ("signals", 1.0); //0.0: off, 1.0: on
set ("signals_draw", 0.0); //0.0: off, 1.0: on

grid(2001, 5, 0);



//-------------------------------------------------------

//#################################################
//############## GLOBAL VARIABLES #################
//#################################################

// *** Signals ***
diff := 0.6;
deg := 0.3;
k_pad := 10.0;


// *** Metabolism Variables ***
threshold_up := 0.04;
signal_emission := 1.2;


// *** Color parameters ***
color_intensity := 500;
delta_on := 0;
reverse_on := 0;


// *** Strain Parameters ***
met_growth_on := 1;
base_growth := 0.0;


// *** Replating Parameters ***
survivors := 0.9;
survivors_variability := 0.0;
//replate_timing := [ output_time_start := 50.0, output_time_stop := 1000.0, period := -1 ];
replate_timing := [ output_time_start := 50.0, output_time_stop := 100000.0, period := -1 ];

// *** Output parameters ***
output_path := "C:\output_GRO";
pop_level := 1;
output_timing := [ output_time_start := 0.0, output_time_stop := 1000.0, period := 10 ];


// *** Ecolis function ***
x_position := 0.0;
y_position := 0.0;
num_cells := 10;
radious := 250.0;


// *** Interaction Forces ***
f_pos := 0.05;
f_neg := -0.05;

/*
//-------------------------------------------------------
               
//#################################################
//##################   SIGNAL   ###################
//#################################################


signal([ name := "A", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "B", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "C", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "D", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "E", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "F", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "G", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "H", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "I", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "J", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "K", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "L", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "M", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "N", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "O", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "P", kdiff := diff, kdeg := deg, pad := k_pad ]);
signal([ name := "Q", kdiff := diff, kdeg := deg, pad := k_pad ]);



//-------------------------------------------------------
               
//#################################################
//##################   GATES   ####################
//#################################################
*/

gate([ name := "gaTrue", function := "TRUE", input := {} ]);
gate([ name := "gaStrain1", function := "YES", input := {"Strain1"}  ]);
gate([ name := "gaStrain2", function := "YES", input := {"Strain2"}  ]);
gate([ name := "gaStrain3", function := "YES", input := {"Strain3"}  ]);
gate([ name := "gaStrain4", function := "YES", input := {"Strain4"}  ]);
gate([ name := "gaStrain5", function := "YES", input := {"Strain5"}  ]);

    /*
    
//-------------------------------------------------------           
    

//#################################################
//###############   METABOLISM   ##################
//#################################################



metabolism ([name := "metStrain1",
			gate := "gaStrain1",
			metabolites := {"A", "B", "C", "D", "E", "I", "K", "O"},
			fluxes := {"Aout", "Bout", "Cout", "Dout", "Ein", "Iin", "Kin", "Oin", "biomass"},

			Aout := [metabolite := "A", f := [ bias := signal_emission ] ],

			Bout := [metabolite := "B", f := [ bias := signal_emission ] ],

			Cout := [metabolite := "C", f := [ bias := signal_emission ] ],

			Dout := [metabolite := "D", f := [ bias := signal_emission ] ],

			Ein := [metabolite := "E",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"E"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ E := threshold_up, up := "max", low := "ins"]  ],

			Iin := [metabolite := "I",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"I"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ I := threshold_up, up := "max", low := "ins"]  ],

			Kin := [metabolite := "K",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"K"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ K := threshold_up, up := "max", low := "ins"]  ],

			Oin := [metabolite := "O",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"O"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ O := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Ein", "Iin", "Kin", "Oin"}, fluxes_w := {f_neg, f_neg, f_pos, f_pos}, bias := base_growth ] ]
]);


metabolism ([name := "metStrain2",
			gate := "gaStrain2",
			metabolites := {"E", "F", "G", "H", "A", "J", "L", "P"},
			fluxes := {"Eout", "Fout", "Gout", "Hout", "Ain", "Jin", "Lin", "Pin", "biomass"},

			Eout := [metabolite := "E", f := [ bias := signal_emission ] ],

			Fout := [metabolite := "F", f := [ bias := signal_emission ] ],

			Gout := [metabolite := "G", f := [ bias := signal_emission ] ],

			Hout := [metabolite := "H", f := [ bias := signal_emission ] ],

			Ain := [metabolite := "A",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"A"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ A := threshold_up, up := "max", low := "ins"]  ],

			Jin := [metabolite := "J",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"J"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ J := threshold_up, up := "max", low := "ins"]  ],

			Lin := [metabolite := "L",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"L"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ L := threshold_up, up := "max", low := "ins"]  ],

			Pin := [metabolite := "P",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"P"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ P := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Ain", "Jin", "Lin", "Pin"}, fluxes_w := {f_pos, f_neg, f_pos, f_pos}, bias := base_growth ] ]
]);


metabolism ([name := "metStrain3",
			gate := "gaStrain3",
			metabolites := {"I", "J", "B", "F", "M", "Q"},
			fluxes := {"Iout", "Jout", "Bin", "Fin", "Min", "Qin", "biomass"},

			Iout := [metabolite := "I", f := [ bias := signal_emission ] ],

			Jout := [metabolite := "J", f := [ bias := signal_emission ] ],

			Bin := [metabolite := "B",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"B"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ B := threshold_up, up := "max", low := "ins"]  ],

			Fin := [metabolite := "F",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"F"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ F := threshold_up, up := "max", low := "ins"]  ],

			Min := [metabolite := "M",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"M"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ M := threshold_up, up := "max", low := "ins"]  ],

			Qin := [metabolite := "Q",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"Q"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ Q := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Bin", "Fin", "Min", "Qin"}, fluxes_w := {f_neg, f_neg, f_pos, f_neg}, bias := base_growth ] ]
]);


metabolism ([name := "metStrain4",
			gate := "gaStrain4",
			metabolites := {"K", "L", "M", "N", "C", "G"},
			fluxes := {"Kout", "Lout", "Mout", "Nout", "Cin", "Gin", "biomass"},

			Kout := [metabolite := "K", f := [ bias := signal_emission ] ],

			Lout := [metabolite := "L", f := [ bias := signal_emission ] ],

			Mout := [metabolite := "M", f := [ bias := signal_emission ] ],

			Nout := [metabolite := "N", f := [ bias := signal_emission ] ],

			Cin := [metabolite := "C",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"C"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ C := threshold_up, up := "max", low := "ins"]  ],

			Gin := [metabolite := "G",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"G"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ G := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Cin", "Gin"}, fluxes_w := {f_neg, f_pos}, bias := base_growth ] ]
]);


metabolism ([name := "metStrain5",
			gate := "gaStrain5",
			metabolites := {"O", "P", "Q", "D", "H", "N"},
			fluxes := {"Oout", "Pout", "Qout", "Din", "Hin", "Nin", "biomass"},

			Oout := [metabolite := "O", f := [ bias := signal_emission ] ],

			Pout := [metabolite := "P", f := [ bias := signal_emission ] ],

			Qout := [metabolite := "Q", f := [ bias := signal_emission ] ],

			Din := [metabolite := "D",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"D"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ D := threshold_up, up := "max", low := "ins"]  ],

			Hin := [metabolite := "H",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"H"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ H := threshold_up, up := "max", low := "ins"]  ],

			Nin := [metabolite := "N",
					 functions := {"ins", "max"},
					 ins := [ metabolites := {"N"}, metabolites_w := {-0.5}, bias := 0.0 ],
					 max := [ bias := -threshold_up ],
					 tree := [ N := threshold_up, up := "max", low := "ins"]  ],

			biomass := [ metabolite := "biomass", f := [ fluxes := {"Din", "Hin", "Nin"}, fluxes_w := {f_pos, f_neg, f_pos}, bias := base_growth ] ]
]);




//-------------------------------------------------------
               
//#################################################
//##################   COLOR   ####################
//#################################################
*/

color([ gate := "gaStrain1", channels := {0,0,0,color_intensity}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain2", channels := {0,0,color_intensity,0}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain3", channels := {0,0,color_intensity,color_intensity}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain4", channels := {0,color_intensity,0,0}, delta := delta_on, reverse := reverse_on ]);
color([ gate := "gaStrain5", channels := {0,color_intensity,0,color_intensity}, delta := delta_on, reverse := reverse_on ]);



//-------------------------------------------------------
               
//#################################################
//#################   STRAIN   ####################
//#################################################


strain([ name := "Strain1", cell_growth := [ base_growth_rate_rdn := [ dist_params := {0.0, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain2", cell_growth := [ base_growth_rate_rdn := [ dist_params := {0.0, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain3", cell_growth := [ base_growth_rate_rdn := [ dist_params := {0.0, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain4", cell_growth := [ base_growth_rate_rdn := [ dist_params := {0.0, 0.0} ], metabolism_growth := met_growth_on ] ]);
strain([ name := "Strain5", cell_growth := [ base_growth_rate_rdn := [ dist_params := {0.0, 0.0} ], metabolism_growth := met_growth_on ] ]);



//-------------------------------------------------------
               
//#################################################
//#############  REPLATING FUNCTION  ##############
//#################################################


//replating([ alive_fraction := survivors, alive_fraction_var := survivors_variability, timing := replate_timing ]);
/*
replating([ alive_fraction := 0.9,
			alive_fraction_var := 0.1,
			timing := replate_timing //,
			//new_location := [ x := 0.0, y := -200.0, r := 300.0, mode := "polar"]
]);



//-------------------------------------------------------
               
//#################################################
//##################   OUTPUT   ###################
//#################################################


output([ path := output_path, file_name := "prueba_5_especies_experiment0",
						gate := "gaTrue",
						population_level := 1,
						//timing := output_timing,
						output_time_start := 0.0, output_time_stop := 50.0, period := 100,
						decimal_places := 2,
						fields := {"molecule"}, molecule := {"Strain1", "Strain2", "Strain3", "Strain4", "Strain5"}]);

						
						
//-------------------------------------------------------

// ====================== 
//|   LOAD INSTRUCTION   |
// ======================
*/
load_gen([ auto_gates := 0 ]);


//-------------------------------------------------------

//#################################################
//############ PROGRAM INSTRUCTIONS ###############
//#################################################

program p() := 
{
	selected: {die(); }
    skip();
};

program main() :=
{
	skip();
};



//-------------------------------------------------------
               
//#################################################
//##################   ECOLIS   ###################
//#################################################


ecolis( [ num := 4, x := 0.0, y := 0.0, r := 50.0 , strain := "Strain1", plasmids := {}, molecules := {}, mode := "default" ], program p());
ecolis( [ num := 4, x := 1.0, y := 0.0, r := 51.0 , strain := "Strain2", plasmids := {}, molecules := {}, mode := "default" ], program p());
//ecolis( [ num := num_cells, x := x_position, y := y_position, r := radious , strain := "Strain3", plasmids := {}, molecules := {}, mode := "default" ], program p());
//ecolis( [ num := num_cells, x := x_position, y := y_position, r := radious , strain := "Strain4", plasmids := {}, molecules := {}, mode := "default" ], program p());
//ecolis( [ num := num_cells, x := x_position, y := y_position, r := radious , strain := "Strain5", plasmids := {}, molecules := {}, mode := "default" ], program p());
